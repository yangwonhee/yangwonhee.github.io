{"componentChunkName":"component---src-templates-blog-template-js","path":"/99study/","result":{"data":{"cur":{"id":"c0fdf797-d8be-5551-bacb-bba44c4d5168","html":"<h3 id=\"-첫날이니까-서론\" style=\"position:relative;\"><a href=\"#-%EC%B2%AB%EB%82%A0%EC%9D%B4%EB%8B%88%EA%B9%8C-%EC%84%9C%EB%A1%A0\" aria-label=\" 첫날이니까 서론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💬 첫날이니까 서론</h3>\n<p>며칠 전 네이버 코딩테스트 보고 심각성을 깨달았다.\n한 2년 전쯤 대학원 갈지 취업할지 고민하면서 알고리즘 공부하다가 결국 대학원에 <del>납치</del> 된 이후로 알고리즘 공부를 아예 안했다.\n근데 눈 떠보니 졸업논문 쓰고있고, 취업해야하고..\n예전에 한 기억 살려서 코테봤다가 겨우 1솔했다.\n이번에 쉬웠다해서 1차 멘붕.. 시간복잡도 고려안해서 2차 멘붕..\n아무튼 그렇게 코테 공부해야지 생각했는데 마침 스터디 한다길래 냅다 참여. 심지어 무료에다가 열심히하면 선물도 줌 ..!!\n아무튼 그래서 신청을 하려고 보니 <strong>비기너, 미들러, 챌린저</strong> 있길래 일단 네이버 코테의 쓴 맛을 보고 비기너로 신청을 하고 문제를 봤는데 .. 백준 단계 별 첫 문제 수준이라 미들러로 넘어가서 풀었다.</p>\n<br>\n<br>\n<h2 id=\"-오늘의-회고\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\" aria-label=\" 오늘의 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💬 오늘의 회고</h2>\n<ul>\n<li>어떤 문제가 있었고, 나는 어떤 시도를 했는지:</li>\n</ul>\n<p>처음에 성격 유형에 따라 분류할 때, 입력 데이터에 정해진 알파벳이 있는 줄 모르고 모든 알파벳을 고려해서 코드를 짜다가 .. 뭔가 이상해서 문제를 보니 정해진 성격유형이 있었다. 그래서 더 쉽게 짤 수 있었다. 문제를 잘 읽어야겠다.\n비기너 바로 풀고 미들러로 넘어갔는데 두 문제 푸는 동안 40분 정도 걸린 것 같다. 목요일 스터디에는 미들러, 챌린저 한 문제 씩 풀어보고 싶다. 오늘 챌린저 풀이 설명 듣는데, 내가 안 푼 문제에 대해 이야기를 들으니까 스포당하는 기분이어서 다음 스터디에는 주어진 문제 무조건 풀고 들어야겠다고 생각했다.</p>\n<ul>\n<li>무엇을 새롭게 알았는지:</li>\n</ul>\n<p>스터디에서 재귀함수를 이용하여 푸신 분이 계셨는데, 제한사항이 널널하다면 재귀함수 보다는 직관적으로 이해할 수 있는 코드로 짜는게 좋다고 하셨다. 사실 나는 아직 알고리즘을 완벽하게 아는건 아니라 시간복잡도를 먼저 고려하는게 베스트지만, 나중에 실력을 키우면 직관적으로 이해할 수 있는 코드를 짜는 연습을 해야겠다.</p>\n<ul>\n<li>내일 학습할 것은 무엇인지:</li>\n</ul>\n<p>퇴근 후에 스터디에서 제공해준 문제은행에서 적당히 어려운거 한 문제 선별해서 풀고(DP), 시간복잡도 계산해서 보완하는 학습을 해보려고 한다.\n<br>\n<br></p>\n<h2 id=\"프로그래머스-코딩테스트-문제\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%AC%B8%EC%A0%9C\" aria-label=\"프로그래머스 코딩테스트 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래머스 코딩테스트 문제</h2>\n<p>👉 <a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/118666\">성격 유형 검사하기 문제 링크</a></p>\n<br>\n<br>\n<h2 id=\"-전체-코드\" style=\"position:relative;\"><a href=\"#-%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\" 전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌱 전체 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>survey<span class=\"token punctuation\">,</span> choices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 각 유형을 dictionary로 초기 점수 0점으로 세팅.</span>\n    li <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"RT\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CF\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"JM\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"AN\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span>\n        \n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> surv <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>survey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 문제에서 중간값이 4이므로 중간 점수를 0점으로 바꿈.</span>\n        score <span class=\"token operator\">=</span> choices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span>\n        <span class=\"token comment\"># 만약에 유형이 반대로 세팅되어있으면 다시 바꿔주면서 점수에 -1 곱해서 거꾸로 만들어주기.</span>\n        <span class=\"token keyword\">if</span> surv <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            surv <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>surv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            score <span class=\"token operator\">*=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        li<span class=\"token punctuation\">[</span>surv<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> score\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 왼쪽 유형이면 음수, 오른쪽 유형이면 양수임.</span>\n    <span class=\"token comment\"># 만약 중간값이면 알파벳 순서. 고려해서 else 조건으로 넣음.</span>\n    <span class=\"token keyword\">for</span> surv <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>surv<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> li<span class=\"token punctuation\">[</span>surv<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<ul>\n<li><a href=\"#-%EC%B2%AB%EB%82%A0%EC%9D%B4%EB%8B%88%EA%B9%8C-%EC%84%9C%EB%A1%A0\">💬 첫날이니까 서론</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\">💬 오늘의 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%AC%B8%EC%A0%9C\">프로그래머스 코딩테스트 문제</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\">🌱 전체 코드</a></p>\n</li>\n</ul>\n</div>","excerpt":"💬 첫날이니까 서론 며칠 전 네이버 코딩테스트 보고 심각성을 깨달았다.\n한 2년 전쯤 대학원 갈지 취업할지 고민하면서 알고리즘 공부하다가 결국 대학원에 납치 된 이후로 알고리즘 공부를 아예 안했다.\n근데 눈 떠보니 졸업논문 쓰고있고, 취업해야하고..\n예전에 한 기억 살려서 코테봤다가 겨우 1솔했다.\n이번에 쉬웠다해서 1차 멘붕.. 시간복잡도 고려안해서 2차 멘붕..\n아무튼 그렇게 코테 공부해야지 생각했는데 마침 스터디 한다길래 냅다 참여. 심지어 무료에다가 열심히하면 선물도 줌 ..!!\n아무튼 그래서 신청을 하려고 보니 비기너, 미들러, 챌린저 있길래 일단 네이버 코테의 쓴 맛을 보고 비기너로 신청을 하고 문제를 봤는데 .. 백준 단계 별 첫 문제 수준이라 미들러로 넘어가서 풀었다. 💬 오늘의 회고 어떤 문제가 있었고, 나는 어떤 시도를 했는지: 처음에 성격 유형에 따라 분류할 때, 입력 데이터에 정해진 알파벳이 있는 줄 모르고 모든 알파벳을 고려해서 코드를 짜다가 .. 뭔가 이상…","frontmatter":{"date":"March 25, 2024","title":"99클럽 코테 스터디 1일차 TIL","categories":"CodingTest","author":"원희","emoji":"✨"},"fields":{"slug":"/99study/"}},"next":{"id":"936f49b1-656d-5542-8f13-526052081b49","html":"<p>👉👉 <a href=\"https://www.acmicpc.net/problem/15649\">15649번 문제 바로가기</a>\n👉👉 <a href=\"https://jamesu.dev/posts/2020/04/13/baekjoon-problem-solving-15649/\">reference: 코드1</a>\n👉👉 <a href=\"https://jiwon-coding.tistory.com/21\">reference: 코드2</a>\n👉👉 <a href=\"https://velog.io/@seanlion/bfsdfs\">reference2: 백트래킹</a></p>\n<h2 id=\"-문제\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C\" aria-label=\" 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👊 문제</h2>\n<p>자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.</p>\n<ul>\n<li>1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열</li>\n</ul>\n<br/>\n<h2 id=\"-입출력\" style=\"position:relative;\"><a href=\"#-%EC%9E%85%EC%B6%9C%EB%A0%A5\" aria-label=\" 입출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👉 입출력</h2>\n<ul>\n<li>\n<p><strong>입력:</strong> 첫째 줄에 자연수 N과 M이 주어진다. (1 ≤ M ≤ N ≤ 8)</p>\n</li>\n<li>\n<p><strong>출력:</strong> 한 줄에 하나씩 문제의 조건을 만족하는 수열을 출력한다. 중복되는 수열을 여러 번 출력하면 안되며, 각 수열은 공백으로 구분해서 출력해야 한다. 수열은 사전 순으로 증가하는 순서로 출력해야 한다.</p>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"-풀이\" style=\"position:relative;\"><a href=\"#-%ED%92%80%EC%9D%B4\" aria-label=\" 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💬 풀이</h2>\n<p><del>c언어로 DFS를 배웠다지만 … 전공수업에 따라가기 벅차서 제대로 사용할 줄도 몰랐다. 백트랙킹 첫 문제여서 접근 방식 조차 몰라서 그냥 검색 해버렸다.</del></p>\n<p>재귀함수 &#x26;&#x26; 백트래킹을 이용하는 문제이다.</p>\n<ul>\n<li>백트랙킹이란, 해결책에 대한 후보를 구축해 나아가다 가능성이 없다고 판단되는 즉시 후보를 포기해 정답을 찾아가는 범용적인 알고리즘으로, 제약 충족 문제를 풀 때 주로 쓰인다.</li>\n<li>가능성이 없는 즉시 제외함을 통해 시간복잡도를 줄일 수 있다.</li>\n<li>이러한 것을 <code class=\"language-text\">가지치기(Pruning)</code> 이라고 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> sys\n\nN<span class=\"token punctuation\">,</span> M <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>n과 m을 리스트로 담아낸다. 추후에 필요한 data를 리스트로 정의해놓는다.</li>\n</ul>\n<br>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> M<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n            data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n            dfs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            data<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndfs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>리스트data의 길이가 M개가 되면 출력 후 return을 해준다.</li>\n<li>그 전까지는 i를 1부터 N까지 중복되지 않는 값일 때 리스트data에 추가를 해주고 재귀함수를 호출한다. 호출함으로써 <code class=\"language-text\">가지치기(Pruning)</code> 가 된다.</li>\n<li>만약 N = 4, M = 3이라면 아래와 같은 형태로 진행이 될 것이다.</li>\n<li>data: [1] -> [1, 2] -> [1, 2, 3] -> [1, 2] -> [1, 2, 4] -> [1, 2] -> [1] -> [1, 3] -> …</li>\n</ul>\n<br>\n<br>\n<h2 id=\"-전체-코드\" style=\"position:relative;\"><a href=\"#-%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\" 전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌱 전체 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> sys\n\nN<span class=\"token punctuation\">,</span> M <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> M<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n            data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n            dfs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            data<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ndfs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EB%AC%B8%EC%A0%9C\">👊 문제</a></li>\n<li><a href=\"#-%EC%9E%85%EC%B6%9C%EB%A0%A5\">👉 입출력</a></li>\n<li><a href=\"#-%ED%92%80%EC%9D%B4\">💬 풀이</a></li>\n<li><a href=\"#-%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\">🌱 전체 코드</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 12, 2022","title":"백준 15649번 N과 M(1) / python, 파이썬","categories":"CodingTest","author":"코린이","emoji":"✨"},"fields":{"slug":"/bj_15649/"}},"prev":{"id":"b28668ae-e09d-5428-8fb6-81cc2f5452a0","html":"<h2 id=\"-오늘의-회고\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\" aria-label=\" 오늘의 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💬 오늘의 회고</h2>\n<p>깃허브 블로그 글을 공유하고 의견을 나누기 위해서는 utterances를 적용해야겠다는 생각이 들었다. 그동안은 나 혼자만의 기록용이었는데 확실히 혼자하니까 나태해지는 것 같다. 그래서 오늘은 댓글기능을 적용해볼 것이다. 일단 TIL 쓰고 ㅎㅎ\n오늘도 스터디에서 문제들이 올라왔다. 스터디 아닌 날도 올려주시는 줄 몰랐다. 오히려 좋아 .. 내가 골랐으면 문제 쇼핑하고 있었을 것 같다. 아직은 미들러만 풀려고 한다. 일단 논문쓰고 자소서 서류들 넣느라 정신이 좀 없는 상태이다. 오후 6시 퇴근인데 요즘 논문때문에 오후 7시 퇴근이면 일찍 퇴근하는 편 .. ㅠㅠ\n교수님께서 일단 졸업논문 먼저 완성하라고 하셔서 졸업논문에 집중하는 중이다. 팟팅..</p>\n<br>\n<br>\n<ul>\n<li>무엇을 새롭게 알았는지:</li>\n</ul>\n<p>네이버 코테봤을 때, ‘해시맵으로 푸는거죠?’ 다들 이 말을 했다. 나는 해시맵이 뭐지 .. 이러고 조용히 있었다. 근데 ? 파이썬에서는 해시맵 = 딕셔너리였다.\n이래서 기본개념이 중요한거 같다.</p>\n<ol>\n<li>==Hashmap== dict() 탐색, 삽입, 삭제의 시간복잡도는 O(1)이다.</li>\n<li>==TreeMap== SortedDict()의 탐색, 삽입, 삭제의 시간복잡도는 O(logN)이다.</li>\n<li>==HashSet== set()의 탐색, 삽입, 삭제의 시간복잡도는 O(1)이다.</li>\n<li>==TreeSet== SortedSet()의 탐색, 삽입, 삭제의 시간복잡도는 O(logN)이다.</li>\n</ol>\n<br>\n<br>\n<ul>\n<li>내일 학습할 것은 무엇인지:</li>\n</ul>\n<p>퇴근하고 스터디 문제 미들러 하나 풀고, XGboost관련 내용 정리하기.\n<br>\n<br></p>\n<h2 id=\"프로그래머스-코딩테스트-문제\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%AC%B8%EC%A0%9C\" aria-label=\"프로그래머스 코딩테스트 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래머스 코딩테스트 문제</h2>\n<p>👉 <a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/178871\">달리기경주 문제 링크</a></p>\n<br>\n<br>\n<h2 id=\"-전체-코드\" style=\"position:relative;\"><a href=\"#-%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\" 전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌱 전체 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>players<span class=\"token punctuation\">,</span> callings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    dic <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>player<span class=\"token punctuation\">:</span> i <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> player <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>players<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> call <span class=\"token keyword\">in</span> callings<span class=\"token punctuation\">:</span>\n        num <span class=\"token operator\">=</span> dic<span class=\"token punctuation\">[</span>call<span class=\"token punctuation\">]</span>\n        dic<span class=\"token punctuation\">[</span>call<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        swap_p <span class=\"token operator\">=</span> players<span class=\"token punctuation\">[</span>num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        dic<span class=\"token punctuation\">[</span>swap_p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        players<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> players<span class=\"token punctuation\">[</span>num<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> players<span class=\"token punctuation\">[</span>num<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> players<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> players</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\">💬 오늘의 회고</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%AC%B8%EC%A0%9C\">프로그래머스 코딩테스트 문제</a></li>\n<li><a href=\"#-%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\">🌱 전체 코드</a></li>\n</ul>\n</div>","frontmatter":{"date":"March 26, 2024","title":"99클럽 코테 스터디 2일차 TIL","categories":"CodingTest","author":"원희","emoji":"✨"},"fields":{"slug":"/99study_240326/"}},"site":{"siteMetadata":{"siteUrl":"https://www.yangwonhee.github.io","comments":{"utterances":{"repo":"yangwonhee/yangwonhee.github.io"}}}}},"pageContext":{"slug":"/99study/","nextSlug":"/bj_15649/","prevSlug":"/99study_240326/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}